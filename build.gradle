group 'com.devsmart'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
apply from: file('gradle/idea.gradle')

repositories {
    mavenCentral()
}

sourceCompatibility = 1.7

ext.versions = [
        antlr: '4.5.1'
]

ext.antlr = [
        grammarpackage: "com.devsmart.zookeeper",
        antlrSource: 'src/main/antlr',
        destinationDir: "src/generated-sources/java"
]



configurations {
    antlr4 {
        description = "ANTLR4"
    }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.7'
    compile 'com.google.guava:guava:18.0'
    compile 'commons-cli:commons-cli:1.3.1'
    compile 'com.dev-smart:devsmart-core:0.1.8'
    compile group: "org.antlr", name: "antlr4-runtime", version: versions.antlr
    antlr4 group: "org.antlr", name: "antlr4", version: versions.antlr
    testCompile 'junit:junit:4.11'
    testCompile 'org.slf4j:slf4j-simple:1.7.7'
}

task antlrOutputDir << {
    mkdir(antlr.destinationDir)
}

task generateGrammarSource(dependsOn: antlrOutputDir, type: JavaExec) {
    description = 'Generates Java sources from ANTLR4 grammars.'

    inputs.dir file(antlr.antlrSource)
    outputs.dir file(antlr.destinationDir)

    def grammars = fileTree(antlr.antlrSource).include('**/*.g4')

    main = 'org.antlr.v4.Tool'
    classpath = configurations.antlr4
    def pkg = antlr.grammarpackage.replaceAll("\\.", "/")
    args = ["-o", "${antlr.destinationDir}/${pkg}"/*, "-atn"*/, "-visitor", "-package", antlr.grammarpackage, grammars.files].flatten()

}

compileJava {
    dependsOn generateGrammarSource
    source antlr.destinationDir
}

clean {
    delete antlr.destinationDir
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}


